name: Build

on: [push]
jobs:
  build:
    name: 'Build Repo'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Set up JDK 11'
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: 'Cache Maven packages'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: 'Build with Maven'
        run: mvn --batch-mode --update-snapshots verify

  maven_pre_release:
#      if: ${{ github.ref == 'refs/heads/develop' }}
    name: 'Pre-Release'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      # Prepares Maven Release
      - name: 'Maven Release'
        uses: SI-Gen/github-actions-maven-release@master
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk/
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          release-branch-name: 'pre_release_workflow' #TODO: will change to develop on merge to master
          git-release-bot-name: 'bbdsoftware'
          git-release-bot-email: 'mavencentral@bbd.co.za'

          maven-args: '-DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Dmaven.deploy.skip=true -Prelease-oss-maven-central,gpg'
          version-major: false
          version-minor: false

          maven-repo-server-id: ossrh
          maven-repo-server-username: ${{ secrets.OSSRH_USERNAME }}
          maven-repo-server-password: ${{ secrets.OSSRH_TOKEN }}

          gpg-enabled: true
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

  upload_jar:
    #      if: ${{ github.ref == 'refs/heads/develop' }}
    name: 'Upload Jar To GitHub'
    runs-on: ubuntu-latest
    needs: maven_pre_release
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      # Get Previous tag
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Changes Maven Version
      - name: 'Change Maven Version'
        run: |
          mvn versions:set -DnewVersion=${{ steps.previoustag.outputs.tag }}

      # Generate Jar File
      - name: 'Generate Jar'
        run: mvn package -Dmaven.javadoc.skip=true -DskipTests -DskipITs  -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}

      # Upload Jar File
      - name: 'Upload Jar Files to Release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/jportal2-${{ steps.previoustag.outputs.tag }}.jar
          asset_name: jportal2-${{ steps.previoustag.outputs.tag }}.jar
          tag: ${{ steps.previoustag.outputs.tag }}
          overwrite: true
          body: 'JPortal2 - Pre-release<br/><br/><b>Change Log<b><br/>${{steps.github_release.outputs.changelog}}'


