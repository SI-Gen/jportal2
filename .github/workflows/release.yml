name: Release

on:
  workflow_dispatch:
    inputs:
      release_description:
        description: 'Description'
        required: false
        default: 'JPortal2 - Release'
      release_type:
        description: 'Next Maven Release Version (patch, minor, major)'
        required: true
        default: 'patch'

jobs:
  build:
    name: 'Building Repo'
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: 'Git Config'
        run: |
          echo 'XXXXXXXXXXXXXXXXXXXX'
          git config --list

      - uses: actions/checkout@v2
      - name: 'Build and Test'
        uses: qcastel/github-actions-maven-cmd@master
        with:
          maven-args: "clean install -Ddockerfile.skip -DdockerCompose.skip -Djib.skip"

  maven_release:
    name: 'Maven Release'
    runs-on: ubuntu-latest
    needs: build
    if: "!contains(github.event.head_commit.message, '[Github-Bot]')"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Prepares Maven Release
      - name: 'Maven Release'
        uses: qcastel/github-actions-maven-release@master
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk/
        with:
#          access-token: ${{ secrets.GITHUB_TOKEN }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          release-branch-name: 'master'
          git-release-bot-name: 'bbdsoftware'
          git-release-bot-email: 'mavencentral@bbd.co.za'

          maven-args: '-X -DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Prelease-oss-maven-central'
          version-major: ${{github.event.inputs.release_type == 'major'}}
          version-minor: ${{github.event.inputs.release_type == 'minor'}}

          maven-repo-server-id: ossrh
          maven-repo-server-username: ${{ secrets.MVN_USERNAME }}
          maven-repo-server-password: ${{ secrets.MVN_PASSPHRASE }}

          gpg-enabled: false
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

  upload_jar:
    name: 'Upload Jar'
    runs-on: ubuntu-latest
    needs: maven_release
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      # Get Previous tag
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Changes Maven Version
      - name: 'Change Maven Version'
        run: |
          mvn versions:set -DnewVersion=${{ steps.previoustag.outputs.tag }}-SNAPSHOT

      # Generate Jar File
      - name: 'Generate Jar'
        run: mvn package -Dmaven.javadoc.skip=true -DskipTests -DskipITs  -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}

      # Upload Jar File
      - name: Upload Jar Files to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/jportal2-${{ steps.previoustag.outputs.tag }}-SNAPSHOT.jar
          asset_name: jportal2-${{ steps.previoustag.outputs.tag }}-SNAPSHOT.jar
          tag: ${{ steps.previoustag.outputs.tag }}
          overwrite: true
          body: '${{github.event.inputs.release_description}}<br/><br/><b>Change Log<b><br/>${{steps.github_release.outputs.changelog}}'

  deploy:
    name: 'Maven Nexus Release'
    runs-on: ubuntu-latest
    needs: upload_jar
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      # Get Previous tag
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      # Changes Maven Version
      - name: 'Change Maven Version'
        run: |
          mvn versions:set -DnewVersion=${{ steps.previoustag.outputs.tag }}-SNAPSHOT

      # Maven Deploy
      - name: 'Maven Nexus Release'
        run: |
          mvn clean deploy -Prelease
