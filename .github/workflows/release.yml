name: Release

on:
  workflow_dispatch:
    inputs:
      release_description:
        description: 'Description'
        required: false
        default: 'JPortal2 - Release'
      release_type:
        description: 'Next Maven Release Version (patch, minor, major)'
        required: true
        default: 'patch'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  maven_release:
    name: 'Maven Release'
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Prepares Maven Release
      - name: 'Maven Release'
        uses: SI-Gen/github-actions-maven-release@master
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk/
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          release-branch-name: 'master'
          git-release-bot-name: 'bbd-github-bot'
          git-release-bot-email: 'bbdgithubbot@gmail.com'
          maven-args: '-DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Prelease-oss-maven-central,gpg'
          version-major: ${{github.event.inputs.release_type == 'major'}}
          version-minor: ${{github.event.inputs.release_type == 'minor'}}
          maven-repo-server-id: ossrh
          maven-repo-server-username: ${{ secrets.OSSRH_USERNAME }}
          maven-repo-server-password: ${{ secrets.OSSRH_TOKEN }}
          gpg-enabled: true
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

  upload_jar:
    name: 'Upload Jar To GitHub'
    runs-on: ubuntu-latest
    needs: maven_release
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Change Maven Version'
        run: |
          mvn versions:set -DnewVersion=${{ steps.previoustag.outputs.tag }}
      # Generate Jar File
      - name: 'Generate Jar'
        run: mvn package -Dmaven.javadoc.skip=true -DskipTests -DskipITs  -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
      - name: 'Upload Jar Files to Release'
        uses: svenstaro/upload-release-action@v2
        id: upload_jar
        with:
          release_name: ${{ steps.previoustag.outputs.tag }}
          body: '${{github.event.inputs.release_description}}<br/><br/><b>Change Log<b><br/>${{steps.github_release.outputs.changelog}}'
          tag: ${{ steps.previoustag.outputs.tag }}
          overwrite: true
          asset_name: ${{ steps.previoustag.outputs.tag }}.jar
          file: target/jportal2-${{ steps.previoustag.outputs.tag }}.jar
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: DOWNLOAD URL
        run: echo "**** DOWNLOAD URL ****\n${{steps.upload_jar.browser_download_urls}}"

  build-and_push_image:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        - name: Log in to the docker container registry
          uses: docker/login-action@v2
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Build and push Docker image
          uses: docker/build-push-action@v3
          with:
            context: .
            file: ./docker/alpine/Dockerfile
            build-args:
              jportal2_version=${{ steps.meta.outputs.tags }}
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
