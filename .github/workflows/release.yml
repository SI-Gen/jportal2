name: Release

on:
  workflow_dispatch:
    inputs:
      release_description:
        description: 'Description'
        required: false
        default: 'JPortal2 Release'
      release_type:
        description: 'Release Type (minor, major)'
        required: true
        default: 'minor'

jobs:
  build:
    name: 'Building Repo'
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
      - name: 'Build and Test'
        uses: qcastel/github-actions-maven-cmd@master
        with:
          maven-args: "clean install -Ddockerfile.skip -DdockerCompose.skip -Djib.skip"

  maven_release:
    name: 'Maven Release'
    runs-on: ubuntu-latest
    needs: build
    if: "!contains(github.event.head_commit.message, '[Github-Bot]')"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Prepares Maven Release
      - name: 'Maven Release'
        uses: qcastel/github-actions-maven-release@master
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk/
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          release-branch-name: 'master'
          git-release-bot-name: 'bbdsoftware'
          git-release-bot-email: 'mavencentral@bbd.co.za'

          maven-args: '-DskipTests -DskipITs -Ddockerfile.skip -DdockerCompose.skip -Prelease-oss-maven-central'
          version-major: ${{ steps.tag_version.outputs.new_tag == 'major' }}
          version-minor: ${{ steps.tag_version.outputs.new_tag == 'minor' }}

          maven-repo-server-id: ossrh
          maven-repo-server-username: ${{ secrets.MVN_USERNAME }}
          maven-repo-server-password: ${{ secrets.MVN_PASSPHRASE }}

          gpg-enabled: false
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

#  upload_jar:
#    name: 'Maven Release'
#    runs-on: ubuntu-latest
#    needs: maven_release
#    steps:
#      # Generate Jar File
#      - name: 'Generate Jar'
#        run: mvn package -Dmaven.javadoc.skip=true -DskipTests -DskipITs  -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
#
#      # Upload Jar File
#      - name: Upload Jar Files to Release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: target/jportal2-${{ steps.tag_version.outputs.new_tag }}-SNAPSHOT.jar
#          asset_name: jportal2-${{ steps.tag_version.outputs.new_tag }}-SNAPSHOT.jar
#          tag: ${{ steps.tag_version.outputs.new_tag }}
#          overwrite: true
#          body: jportal2-${{ steps.tag_version.outputs.new_tag }}-SNAPSHOT.jar
          