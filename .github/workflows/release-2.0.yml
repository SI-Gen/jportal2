name: Release 2.0

on:
  workflow_dispatch:
    inputs:
      release_description:
        description: 'Description'
        required: false
        default: 'JPortal2 Release'
      release_type:
        description: 'Release Type (patch, minor, major)'
        required: true
        default: 'minor'

jobs:
  maven_release:
    name: 'Maven Release'
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[Github-Bot]')"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Retrieve & Bump Tag'
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{github.event.inputs.release_type}}
          tag_prefix: ''

      - name: 'Change Maven Version'
        run: |
          mvn versions:set -DnewVersion=${{ steps.tag_version.outputs.new_tag }}-SNAPSHOT

      - name: 'Commit Maven Version'
        uses: EndBug/add-and-commit@v7
        with:
          author_name: 'bbd-github-bot'
          author_email: 'bbdgithubbot@gmail.com'
          message: '[Github-bot] - changed maven version'
          push: true
          add: 'pom.xml'
          
      - name: 'GitHub release'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ steps.tag_version.outputs.new_tag }}
          body: '${{github.event.inputs.release_description}} - ${{ steps.tag_version.outputs.new_tag }}'

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ossrh
          server-username: ${{ secrets.MVN_REPO_PRIVATE_REPO_USER }}
          server-password: ${{ secrets.MVN_REPO_PRIVATE_REPO_PASSWORD }}
          gpg-passphrase:  ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}

      - name: Publish to Apache Maven Central
        run: mvn clean deploy
        env:
          MAVEN_USERNAME: ${{ secrets.MVN_REPO_PRIVATE_REPO_USER }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MVN_REPO_PRIVATE_REPO_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}