name: Release 2.0

on:
  workflow_dispatch:
    inputs:
      release_description:
        description: 'Description'
        required: false
        default: 'JPortal2 Release'
      release_type:
        description: 'Release Type (patch, minor, major)'
        required: true
        default: 'minor'

jobs:
  maven_release:
    name: 'Maven Release'
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[Github-Bot]')"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Bump Git Release Version
      - name: 'Retrieve & Bump Tag'
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: -SNAPSHOT
          tag_prefix: ''

      # Changes Maven Version
      - name: 'Change Maven Version'
        run: |
          mvn versions:set -DnewVersion=${{ steps.tag_version.outputs.new_tag }}${{github.event.inputs.release_snapshot}}

      # Commits Version Change
      - name: 'Commit Maven Version'
        uses: EndBug/add-and-commit@v7
        with:
          author_name: 'bbd-github-bot'
          author_email: 'bbdgithubbot@gmail.com'
          message: '[Github-bot] - changed maven version'
          push: true
          add: 'pom.xml'

      # Generates new GitHub Release
      - name: 'GitHub release'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          artifacts: "release.tar.gz,foo/*.txt"
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ steps.tag_version.outputs.new_tag }}
          body: '${{github.event.inputs.release_description}} - ${{ steps.tag_version.outputs.new_tag }}'

      # Generate Jar File
      - name: 'Generate Jar'
        run: mvn package -Dmaven.javadoc.skip=true -DskipTests -DskipITs  -Dgpg.passphrase=${{ secrets.MVN_GPG_PASSPHRASE }}

      # Upload Jar File
      - name: Upload Jar Files to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/jportal2-${{ steps.tag_version.outputs.new_tag }}${{github.event.inputs.release_snapshot}}.jar
          asset_name: jportal2-${{ steps.tag_version.outputs.new_tag }}${{github.event.inputs.release_snapshot}}.jar
          tag: ${{ steps.tag_version.outputs.new_tag }}
          overwrite: true
          body: jportal2-${{ steps.tag_version.outputs.new_tag }}-SNAPSHOT.jar

      # Prepares Maven Central
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: '11'
          java-package: jdk
          server-id: ossrh
          server-username: ${{ secrets.MVN_USERNAME }}
          server-password: ${{ secrets.MVN_PASSPHRASE }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      # Publish to Central Repository
      - name: Publish to Apache Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.MVN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MVN_PASSPHRASE }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} \
            -Prelease-oss-maven-central \
            -Dmaven.javadoc.skip=true \
            -DskipTests -DskipITs \
            clean deploy